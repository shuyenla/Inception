# server {

# 	listen 80;

# 	listen [::]:80;

# 	server_name localhost www.localhost;

# 	return 301 https://$server_name$request_uri;

# }

# server {
# 	# SSL configuration
# 	#
# 	listen 443 ssl;
# 	listen [::]:443 ssl;
# 	server_name localhost www.localhost;

# 	ssl_certificate /root/mkcert/localhost.pem;
# 	ssl_certificate_key /root/mkcert/localhost-key.pem;

# 	#
# 	# Note: You should disable gzip for SSL traffic.
# 	# See: https://bugs.debian.org/773332
# 	#
# 	# Read up on ssl_ciphers to ensure a secure configuration.
# 	# See: https://bugs.debian.org/765782
# 	#
# 	# Self signed certs generated by the ssl-cert package
# 	# Don't use them in a production server!
# 	#
# 	# include snippets/snakeoil.conf;

# 	root /var/www/localhost;

# 	# Add index.php to the list if you are using PHP
# 	index index.php index.html index.htm index.nginx-debian.html;

# 	#server_name _;

# 	location / {
# 		# First attempt to serve request as file, then
# 		# as directory, then fall back to displaying a 404.
# 		try_files $uri $uri/ =404;
# 	}

# 	# pass PHP scripts to FastCGI server
# 	#
# 	location ~ \.php$ {
# 		include snippets/fastcgi-php.conf;
# 	#
# 	#	# With php-fpm (or other unix sockets):
# 		fastcgi_pass unix:/run/php/php7.3-fpm.sock;
# 	#	# With php-cgi (or other tcp sockets):
# 	#	fastcgi_pass 127.0.0.1:9000;
# 	}

# 	# pass the PHP scripts to FastCGI server listening on wordpress:9000

# 	location ~ \.php$ {

# 		fastcgi_split_path_info ^(.+\.php)(/.+)$;

# 		fastcgi_pass wordpress:9000;

# 		fastcgi_index index.php;

# 		include fastcgi_params;

# 		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

# 		fastcgi_param SCRIPT_NAME $fastcgi_script_name;
		
# 	}


# }

server {

	listen 443 ssl http2;
	listen [::]:443 ssl http2;
	server_name localhost www.localhost;

	ssl_certificate /root/mkcert/localhost.pem;
	ssl_certificate_key /root/mkcert/localhost-key.pem;
	access_log off;

	# TLS 1.2 & 1.3
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
	ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
 
    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    add_header Strict-Transport-Security "max-age=63072000" always;
 
    # OCSP stapling
    ssl_stapling off;
    ssl_stapling_verify off;

	# verify chain of trust of OCSP response using Root CA and Intermediate certs
	ssl_trusted_certificate /root/mkcert/localhost.pem;

    # replace with the IP address of your resolver
    resolver 127.0.0.1;

	root /var/www/localhost;

	index index.php index.html index.htm index.nginx-debian.html;

	server_tokens off;

	location / {

		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404. 

		try_files $uri $uri/ /index.php?$args;

	}

	# pass the PHP scripts to FastCGI server listening on wordpress:9000

	location ~ \.php$ {

		fastcgi_split_path_info ^(.+\.php)(/.+)$;

		fastcgi_pass wordpress:9000;

		fastcgi_index index.php;

		include fastcgi_params;

		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

		fastcgi_param SCRIPT_NAME $fastcgi_script_name;
		
	}
}


# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     server_name www.shlu.42.fr;
 
#     ssl_certificate /root/mkcert/localhost.pem;
# 	ssl_certificate_key /root/mkcert/localhost-key.pem;
#     ssl_session_timeout 1d;
#     ssl_session_cache shared:SharedNixCraftSSL:10m; 
#     ssl_session_tickets off;
 
#     # TLS 1.2 & 1.3
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_prefer_server_ciphers off;
 
#     # HSTS (ngx_http_headers_module is required) (63072000 seconds)
#     add_header Strict-Transport-Security "max-age=63072000" always;
 
#     # OCSP stapling
#     ssl_stapling on;
#     ssl_stapling_verify on;
 
#     # verify chain of trust of OCSP response using Root CA and Intermediate certs
#     ssl_trusted_certificate /etc/nginx/ssl/fullchain.pem;
 
#     # replace with the IP address of your resolver
#     resolver 8.8.8.8;
# }